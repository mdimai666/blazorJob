@using BlazorJob.Nodes



<g class="red-ui-flow-node red-ui-flow-node-group" transform="translate(@X,@Y)">

    <!-- push btn -->
    <!-- <g transform="translate(-25,2)" class="red-ui-flow-node-button">
                    <rect class="red-ui-flow-node-button-background" rx="5" ry="5" width="32" height="26"></rect>
                    <rect class="red-ui-flow-node-button-button" x="5" y="4" rx="4" ry="4" width="16" height="18"
                        fill="#a6bbcf" fill-opacity="1"></rect>
                </g> -->

    <!-- tail -->
    <!-- <g transform="translate(134,2)" class="red-ui-flow-node-button" style="display: inherit;">
                    <rect class="red-ui-flow-node-button-background" rx="5" ry="5" width="32" height="26"
                        fill-opacity="1"></rect>
                    <rect class="red-ui-flow-node-button-button" x="11" y="4" rx="4" ry="4" width="16" height="18"
                        fill="#87a980" fill-opacity="1"></rect>
                </g> -->

    <!-- body -->

    <rect class="red-ui-flow-node " rx="5" ry="5" fill="#fdd0a2" width="120" height="30"></rect>

    <!-- left icon -->
    <g class="red-ui-flow-node-icon-group" x="0" y="0" transform="" style="pointer-events: none;">
        <rect x="0" y="0" class="red-ui-flow-node-icon-shade" width="30" height="30"></rect>
        <image xlink:href="/img/function.svg" class="red-ui-flow-node-icon" x="0" width="30" height="30" style="" y="0">
        </image>


        <path d="M 30 1 l 0 28" class="red-ui-flow-node-icon-shade-border"></path>
    </g>
    <!-- right icon -->
    <!-- <g class="red-ui-flow-node-icon-group red-ui-flow-node-icon-group-right" x="0" y="0"
                    transform="translate(110,0)" style="pointer-events: none;">
                    <rect x="0" y="0" class="red-ui-flow-node-icon-shade" width="30" height="30"></rect>
                    <image xlink:href="/img/function.svg" class="red-ui-flow-node-icon" x="0" width="30" height="30"
                        y="0" style=""></image>
                    <path d="M 0 1 l 0 28" class="red-ui-flow-node-icon-shade-border"></path>
                </g> -->
    <!--  -->
    <g class="red-ui-flow-node-label node_label_italic" transform="translate(38,16)"><text
            class="red-ui-flow-node-label-text" x="0" y="0">@node.Label</text></g>
    <g class="red-ui-flow-node-status-group" style="display: none;">
        <rect class="red-ui-flow-node-status" x="6" y="1" width="9" height="9" rx="2" ry="2" stroke-width="3">
        </rect><text class="red-ui-flow-node-status-label" x="20" y="10"></text>
    </g>
    <g class="red-ui-flow-node-changed hide" transform="translate(110, -2)">
        <circle r="5"></circle>
    </g>
    <g class="red-ui-flow-node-error hide" transform="translate(110, -2)">
        <path d="M -5,4 l 10,0 -5,-8 z"></path>
    </g>
    <g class="red-ui-flow-port-input" transform="translate(-5,10)">
        <rect class="red-ui-flow-port" rx="3" ry="3" width="10" height="10"></rect>
    </g>
    <g class="red-ui-flow-port-output" transform="translate(115,10)">
        <rect rx="3" ry="3" width="10" height="10" class="red-ui-flow-port"></rect>
    </g>



</g>


@code {
    [Parameter]
    public Node_InPalette node { get; set; }
    [Parameter]
    public float x { get; set; } = 0;
    [Parameter]
    public float y { get; set; } = 0;

    private float X => x + 10;
    private float Y => y + 8;

}
