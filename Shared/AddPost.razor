@using BlazorJob.Data

@inject PostService postService
@inject NavigationManager navigationManager


<EditForm EditContext="_editContext" OnValidSubmit="HandleValidSubmit" class="form">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
        <label for="f-title">Title:</label>
        <InputText id="f-title" @bind-Value="post.Title" class="form-control"/>

    </div>

    <div class="form-group">
        <label for="f-content">Content:</label>
        <InputTextArea id="f-content" @bind-Value="post.Content" class="form-control"/>

    </div>

    <div class="form-group">
      <label for="f-author">Author</label>
      <InputNumber id="f-author" @bind-Value="post.Author" class="form-control"/>
    </div>

    <div class="form-group">
      <label for="f-parent">Parent</label>
      <InputNumber id="f-parent" @bind-Value="post.Parent" class="form-control"/>
    </div>

    <div class="form-group">
      <label for="f-status">Status</label>
      <InputSelect id="f-status" @bind-Value="post.Status" class="form-control" >
        @foreach (var item in Post.StatusList)
        {
            <option value="@item"  >@item</option>
        }
      </InputSelect>
    </div>

    <div class="form-group">
      <label for="f-type">Type</label>
      <InputSelect id="f-type" @bind-Value="post.Type" class="form-control" >
        @foreach (var item in Post.TypeList)
        {
            <option value="@item"  >@item</option>
        }
      </InputSelect>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>

</EditForm>


@code{
    private Post post = new Post();
    private bool _formInvalid = true;
    private EditContext _editContext;

    protected override void OnInitialized()
    {
        _editContext = new EditContext(post);

        _editContext.OnFieldChanged += (_, __) =>
        {
            _formInvalid = !_editContext.Validate();
            StateHasChanged();
        };
    }

    async private void HandleValidSubmit()
    {
        Post addedPost = await postService.AddAsync(post);
        Console.WriteLine($"added ${post.Title}");
        navigationManager.NavigateTo("/items");
    }

}
